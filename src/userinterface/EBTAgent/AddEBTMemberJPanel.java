/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.EBTAgent;

import code.Enterprise.Enterprise;
import code.Enterprise.EBTEnterprise;
import code.EBTCard.EBTCard;
import code.EBTMembers.EBTMembers;
import code.SystemUserAccount.SystemUsers;
import java.awt.CardLayout;
import java.awt.Color;

import java.text.SimpleDateFormat;
import java.util.Calendar;

import java.util.List;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author shruti
 */

public class AddEBTMemberJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateNewUserJPanel
     */
    private JPanel userProcessContainer;
    private SystemUsers usrAcnt;
    private EBTEnterprise insrCmnEntr;
    private String plcyNum;

    public AddEBTMemberJPanel(JPanel userProcessContainer, SystemUsers userAccount, Enterprise enterprise, String policyNumber) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.insrCmnEntr = (EBTEnterprise) enterprise;
        this.usrAcnt = userAccount;
        this.plcyNum = policyNumber;
        populateFields();
        pplTbl();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        enrollBeneficiaryLabel = new javax.swing.JLabel();
        EBTNumberLabel = new javax.swing.JLabel();
        EBTNumberText = new javax.swing.JTextField();
        FirstnameLabel = new javax.swing.JLabel();
        firstNameText = new javax.swing.JTextField();
        lastNameLabel = new javax.swing.JLabel();
        lastNameText = new javax.swing.JTextField();
        ssnLabel = new javax.swing.JLabel();
        ssnText = new javax.swing.JTextField();
        dobLabel = new javax.swing.JLabel();
        addressText = new javax.swing.JTextField();
        genderLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        EbtCardType = new javax.swing.JLabel();
        ebtCardTypeText = new javax.swing.JComboBox();
        addCustomerButton = new javax.swing.JButton();
        BeneficiaryInfoLabel = new javax.swing.JLabel();
        cardInfoLabel = new javax.swing.JLabel();
        phoneLabel = new javax.swing.JLabel();
        phoneText = new javax.swing.JTextField();
        coverageLabel = new javax.swing.JLabel();
        coverageText = new javax.swing.JTextField();
        genderComboBox = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblNewCstmr = new javax.swing.JTable();
        allCustomerLabel = new javax.swing.JLabel();
        backButton = new javax.swing.JButton();
        img = new javax.swing.JLabel();
        dobDateChooser = new com.toedter.calendar.JDateChooser();

        setBackground(new java.awt.Color(0, 153, 153));

        enrollBeneficiaryLabel.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        enrollBeneficiaryLabel.setForeground(new java.awt.Color(0, 51, 51));
        enrollBeneficiaryLabel.setText("ENROLL CARD HOLDERS");

        EBTNumberLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        EBTNumberLabel.setForeground(new java.awt.Color(0, 51, 51));
        EBTNumberLabel.setText("Card Number:");

        FirstnameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        FirstnameLabel.setForeground(new java.awt.Color(0, 51, 51));
        FirstnameLabel.setText("First Name");

        lastNameLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lastNameLabel.setForeground(new java.awt.Color(0, 51, 51));
        lastNameLabel.setText("Last Name");

        ssnLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        ssnLabel.setForeground(new java.awt.Color(0, 51, 51));
        ssnLabel.setText("SSN");

        dobLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        dobLabel.setForeground(new java.awt.Color(0, 51, 51));
        dobLabel.setText("Date of birth");

        genderLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        genderLabel.setForeground(new java.awt.Color(0, 51, 51));
        genderLabel.setText("Gender");

        addressLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(0, 51, 51));
        addressLabel.setText("Address");

        EbtCardType.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        EbtCardType.setForeground(new java.awt.Color(0, 51, 51));
        EbtCardType.setText("EBT Card Type :");

        ebtCardTypeText.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                ebtCardTypeTextFocusGained(evt);
            }
        });
        ebtCardTypeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ebtCardTypeTextActionPerformed(evt);
            }
        });

        addCustomerButton.setBackground(new java.awt.Color(0, 102, 102));
        addCustomerButton.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        addCustomerButton.setForeground(java.awt.Color.white);
        addCustomerButton.setText("ADD CARD HOLDER");
        addCustomerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCustomerButtonActionPerformed(evt);
            }
        });

        BeneficiaryInfoLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        BeneficiaryInfoLabel.setForeground(new java.awt.Color(0, 51, 51));
        BeneficiaryInfoLabel.setText("Personal Information");

        cardInfoLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        cardInfoLabel.setForeground(new java.awt.Color(0, 51, 51));
        cardInfoLabel.setText("Card  Information");

        phoneLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        phoneLabel.setForeground(new java.awt.Color(0, 51, 51));
        phoneLabel.setText("Phone");

        coverageLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        coverageLabel.setForeground(new java.awt.Color(0, 51, 51));
        coverageLabel.setText("Card COverage:");

        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Female", "Male", "Other" }));

        tblNewCstmr.setBackground(new java.awt.Color(204, 204, 204));
        tblNewCstmr.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        tblNewCstmr.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Card Holder", "Card Number", "Card Type", "Coverage %"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblNewCstmr);

        allCustomerLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        allCustomerLabel.setForeground(new java.awt.Color(255, 255, 255));
        allCustomerLabel.setText("All Customers");

        backButton.setBackground(new java.awt.Color(204, 204, 204));
        backButton.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        backButton.setText("Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        img.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        img.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/magnify.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(216, 216, 216)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(dobLabel)
                                        .addComponent(ssnLabel)
                                        .addComponent(addressLabel))
                                    .addGap(27, 27, 27)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(genderLabel)
                                                .addComponent(phoneLabel)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addComponent(ssnText, javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(dobDateChooser, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGap(91, 91, 91)))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(phoneText)
                                                .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(FirstnameLabel)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(29, 29, 29)
                                            .addComponent(EBTNumberLabel)
                                            .addGap(28, 28, 28)
                                            .addComponent(EBTNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(70, 70, 70))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(18, 18, 18)
                                            .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lastNameLabel)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(92, 92, 92)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(allCustomerLabel)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 813, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(backButton)
                        .addGap(162, 162, 162)
                        .addComponent(enrollBeneficiaryLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap(55, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(112, 112, 112))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cardInfoLabel)
                        .addGap(398, 398, 398))))
            .addGroup(layout.createSequentialGroup()
                .addGap(393, 393, 393)
                .addComponent(BeneficiaryInfoLabel)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(coverageLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(coverageText, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(EbtCardType)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(ebtCardTypeText, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(337, 337, 337))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(addCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(387, 387, 387))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(backButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(enrollBeneficiaryLabel)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BeneficiaryInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EBTNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EBTNumberLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lastNameLabel)
                    .addComponent(lastNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(firstNameText, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(FirstnameLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(genderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(genderLabel))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(12, 12, 12)
                            .addComponent(dobLabel)))
                    .addComponent(dobDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(phoneLabel)
                    .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssnText, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ssnLabel))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addressLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cardInfoLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ebtCardTypeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EbtCardType))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coverageText, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coverageLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addCustomerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(allCustomerLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(448, 448, 448))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addCustomerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCustomerButtonActionPerformed

        if (firstNameText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide first name");
            return;
        }

        if (lastNameText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide last name");
            return;
        }

        if (dobDateChooser.getDate() == null) {
            JOptionPane.showMessageDialog(null, "Please provide Date of birth");
            return;
        }

        if (genderComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "Please provide Gender");
            return;
        }

        if (genderComboBox.getItemCount() == 0) {
            JOptionPane.showMessageDialog(null, "Please provide Gender");
            return;
        }

        if (ssnText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide SSN");
            return;
        }

        if (phoneText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide phone");
            return;
        }

        if (addressText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide address");
            return;
        }

        if (coverageText.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide Insurance Coverage");
            return;
        } else {

            String firstName = firstNameText.getText().trim();
            String lastName = lastNameText.getText().trim();
            SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
            String dateOfBirth = "";
            try {
                dateOfBirth = sdf.format(dobDateChooser.getDate());
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Please select customer's dob");
            }
            String gender = genderComboBox.getSelectedItem().toString();

            String ssn = ssnText.getText().trim();
            if (!ssnPatternCheck()) {
                JOptionPane.showMessageDialog(null, "/* United States Social Security numbers are nine-digit numbers in the format AAA-GG-SSSS with following rules. */             \n"
                        + "              \"The first three digits called the area number. The area number cannot be 000, 666, or between 900 and 999\",\n"
                        + "                \" Digits four and five are called the group number and range from 01 to 99\",\n"
                        + "              \"The last four digits are serial numbers from 0001 to 9999.\"");
                ssnText.setBorder(BorderFactory.createLineBorder(Color.RED));

                return;
            }

            if (ssnPatternCheck()) {
                ssnText.setBorder(BorderFactory.createLineBorder(Color.GRAY));

            }

            String address = addressText.getText().trim();

            String phone = phoneText.getText().trim();

            if (!phnPtrnCheck()) {
                JOptionPane.showMessageDialog(null, "/* Following are valid phone number examples */             \n"
                        + "              \"1234567890\", \"123-456-7890\", \"(123)4567890\", \"(123)456-7890\",\n"
                        + "              /* Following are invalid phone numbers */ \n"
                        + "              \"(1234567890)\",\"123)4567890\", \"12345678901\", \"(1)234567890\",");
                phoneText.setBorder(BorderFactory.createLineBorder(Color.RED));

                return;
            }

            if (phnPtrnCheck()) {
                phoneText.setBorder(BorderFactory.createLineBorder(Color.GRAY));

            }

            String policyNumber = EBTNumberText.getText().trim();
            String insurancePolicyName = ebtCardTypeText.getSelectedItem().toString();

            double coverage = Double.parseDouble(coverageText.getText().trim());

            try {
                Double.parseDouble(coverageText.getText().trim());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please provide integer values in coverage textfield");
                return;
            }

            EBTCard insurance = new EBTCard(insurancePolicyName, insrCmnEntr.getName(), coverage);

            EBTMembers insrCust = new EBTMembers(insurance, policyNumber);

            insrCust.setMemFirstName(firstName);
            insrCust.setMemLastName(lastName);
            insrCust.setDob(dateOfBirth);
            insrCust.setGender(gender);
            insrCust.setSsn(ssn);
            insrCust.setPhNo(phone);
            insrCust.setAddress(address);

            insrCust.setEbt(insurance);

            insrCmnEntr.getEbtMembersDirectory().getEbtMem().add(insrCust);

            insrCmnEntr.getEbtMembersDirectory().getEbtMem();

            pplTbl();
            refr();
            JOptionPane.showMessageDialog(null, "Customer is added");

        }

    }//GEN-LAST:event_addCustomerButtonActionPerformed

    private void ebtCardTypeTextFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_ebtCardTypeTextFocusGained
        System.out.println("Gained");
    }//GEN-LAST:event_ebtCardTypeTextFocusGained

    private void ebtCardTypeTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ebtCardTypeTextActionPerformed

        EBTCard selectedPolicy = (EBTCard) ebtCardTypeText.getSelectedItem();
        coverageText.setText(String.valueOf(selectedPolicy.getAllowance()));
    }//GEN-LAST:event_ebtCardTypeTextActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BeneficiaryInfoLabel;
    private javax.swing.JLabel EBTNumberLabel;
    private javax.swing.JTextField EBTNumberText;
    private javax.swing.JLabel EbtCardType;
    private javax.swing.JLabel FirstnameLabel;
    private javax.swing.JButton addCustomerButton;
    private javax.swing.JLabel addressLabel;
    private javax.swing.JTextField addressText;
    private javax.swing.JLabel allCustomerLabel;
    private javax.swing.JButton backButton;
    private javax.swing.JLabel cardInfoLabel;
    private javax.swing.JLabel coverageLabel;
    private javax.swing.JTextField coverageText;
    private com.toedter.calendar.JDateChooser dobDateChooser;
    private javax.swing.JLabel dobLabel;
    private javax.swing.JComboBox ebtCardTypeText;
    private javax.swing.JLabel enrollBeneficiaryLabel;
    private javax.swing.JTextField firstNameText;
    private javax.swing.JComboBox genderComboBox;
    private javax.swing.JLabel genderLabel;
    private javax.swing.JLabel img;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lastNameLabel;
    private javax.swing.JTextField lastNameText;
    private javax.swing.JLabel phoneLabel;
    private javax.swing.JTextField phoneText;
    private javax.swing.JLabel ssnLabel;
    private javax.swing.JTextField ssnText;
    private javax.swing.JTable tblNewCstmr;
    // End of variables declaration//GEN-END:variables

    private boolean phnPtrnCheck() {

        Pattern pattern = Pattern.compile("\\d{10}|(?:\\d{3}-){2}\\d{4}|\\(\\d{3}\\)\\d{3}-?\\d{4}");
        Matcher matcher = pattern.matcher(phoneText.getText());

        boolean b = false;

        if (matcher.matches()) {
            b = true;
        } else {
            b = false;
        }

        return b;
    }

    private boolean ssnPatternCheck() {

        Pattern pattern = Pattern.compile("^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$");
        Matcher matcher = pattern.matcher(ssnText.getText());

        boolean b = false;

        if (matcher.matches()) {
            b = true;
        } else {
            b = false;
        }

        return b;
    }

    private void refr() {

        EBTNumberText.setText(UUID.randomUUID().toString().substring(0, 7));
        firstNameText.setText("");
        lastNameText.setText("");
        phoneText.setText("");
        ssnText.setText("");
        dobDateChooser.setDate(null);
        addressText.setText("");

    }

    private void populateFields() {
        EBTNumberText.setText(plcyNum);
        List<EBTCard> policies = insrCmnEntr.getEbtCardDir().getEBTCards();

        for (EBTCard policy : policies) {
            ebtCardTypeText.addItem(policy);
        }

        EBTCard selectedPolicy = (EBTCard) ebtCardTypeText.getSelectedItem();
        
        if(selectedPolicy != null)
        {
        coverageText.setText(String.valueOf(selectedPolicy.getAllowance()));
        }
        else{
            JOptionPane.showMessageDialog(null , "No Existing policy!");
            return;
        }

    }

    private void pplTbl() {
        DefaultTableModel dtm = (DefaultTableModel) tblNewCstmr.getModel();

        dtm.setRowCount(0);
        List<EBTMembers> customers = insrCmnEntr.getEbtMembersDirectory().getEbtMem();
        for (EBTMembers customer : customers) {
            Object[] row = new Object[4];
            row[0] = customer.getMemFirstName() + " " + customer.getMemLastName();
            row[1] = customer;
            row[2] = customer.getEbt().getEbtType();
            row[3] = customer.getEbt().getAllowance();

            dtm.addRow(row);
        }
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(dtm);
        tblNewCstmr.setRowSorter(sorter);
    }
}
