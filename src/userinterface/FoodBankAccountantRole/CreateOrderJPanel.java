/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FoodBankAccountantRole;

import code.EcoSystem;
import code.Enterprise.Enterprise;
import code.Enterprise.FoodBankEnterprise;
import code.Enterprise.EBTEnterprise;
import code.EBTCard.EBTCard;
import code.EBTMembers.EBTMembers;
import code.Networks.Networks;
import code.Org.OrgVolunteer;
import code.Org.Organization;
import code.Beneficiary.Beneficiary;
import code.SystemUserAccount.SystemUsers;
import code.ProcessQueue.OrderPlaceRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Rajvi
 */
public class CreateOrderJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private SystemUsers userAccount;
    private Enterprise enterprise;
    private EcoSystem ecosystem;
    private String patientId;

    /**
     * Creates new form CreateAppointmentJPanel
     */
    CreateOrderJPanel(JPanel userProcessContainer, SystemUsers userAccount, Enterprise enterprise, EcoSystem ecoSystem, String patientId) {
        initComponents();
        this.userAccount = userAccount;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.ecosystem = ecoSystem;
        this.patientId = patientId;
        
        populateField();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel14 = new javax.swing.JLabel();
        txtPatientId11 = new javax.swing.JTextField();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        lblFndPtnt = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblAlreadyRegistered = new javax.swing.JLabel();
        txtProvideSsn = new javax.swing.JTextField();
        btnFndPtnt = new javax.swing.JButton();
        lblDt = new javax.swing.JLabel();
        lblPtntInfo = new javax.swing.JLabel();
        txtFrstNm = new javax.swing.JTextField();
        lblFrstNm = new javax.swing.JLabel();
        lblAddr = new javax.swing.JLabel();
        lblLstNm = new javax.swing.JLabel();
        txtLstNm = new javax.swing.JTextField();
        lblSsn = new javax.swing.JLabel();
        txtSsn = new javax.swing.JTextField();
        txtPnNo = new javax.swing.JTextField();
        lblPnNo = new javax.swing.JLabel();
        txtAge = new javax.swing.JTextField();
        lblAge = new javax.swing.JLabel();
        lblSex = new javax.swing.JLabel();
        rbMale = new javax.swing.JRadioButton();
        rbFemale = new javax.swing.JRadioButton();
        lblInsInfo = new javax.swing.JLabel();
        rbPtntInsYes = new javax.swing.JRadioButton();
        rbPtntInsNo = new javax.swing.JRadioButton();
        lblIsThsPtntCvrdByIns = new javax.swing.JLabel();
        lblPlcyNm = new javax.swing.JLabel();
        lblInsCmpny = new javax.swing.JLabel();
        btnCrt = new javax.swing.JButton();
        lblRsnFrVst = new javax.swing.JLabel();
        txtRsnFrVst = new javax.swing.JTextField();
        lblPtntMdclCndtn = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddr = new javax.swing.JTextArea();
        lblPlcyNo = new javax.swing.JLabel();
        txtPlcyNo = new javax.swing.JTextField();
        btnFndPlcy = new javax.swing.JButton();
        txtInsCmpny = new javax.swing.JTextField();
        txtPlcyNm = new javax.swing.JTextField();
        txtDt = new javax.swing.JTextField();
        lblPtntInsCvrg = new javax.swing.JLabel();
        txtPtntInsCvrg = new javax.swing.JTextField();
        rbOthr = new javax.swing.JRadioButton();
        lblVstId = new javax.swing.JLabel();
        txtVstId = new javax.swing.JTextField();
        btnRstPlcyNo = new javax.swing.JButton();
        txtEml = new javax.swing.JLabel();
        txtPtntEml = new javax.swing.JTextField();
        lblDrTyp = new javax.swing.JLabel();
        cbDrTyp = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();

        jLabel14.setText("Middle Name :");

        setBackground(new java.awt.Color(253, 249, 232));
        setForeground(new java.awt.Color(204, 130, 43));

        lblFndPtnt.setFont(new java.awt.Font("YuGothic", 1, 18)); // NOI18N
        lblFndPtnt.setForeground(new java.awt.Color(204, 130, 43));
        lblFndPtnt.setText("CREATE ORDER");

        btnBack.setBackground(new java.awt.Color(204, 130, 43));
        btnBack.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblAlreadyRegistered.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblAlreadyRegistered.setForeground(new java.awt.Color(204, 130, 43));
        lblAlreadyRegistered.setText("Already registered? Provide SSN: ");

        btnFndPtnt.setBackground(new java.awt.Color(204, 130, 43));
        btnFndPtnt.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        btnFndPtnt.setForeground(new java.awt.Color(255, 255, 255));
        btnFndPtnt.setText("Find Beneficiary");
        btnFndPtnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFndPtntActionPerformed(evt);
            }
        });

        lblDt.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblDt.setForeground(new java.awt.Color(204, 130, 43));
        lblDt.setText("Date:");

        lblPtntInfo.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblPtntInfo.setForeground(new java.awt.Color(204, 130, 43));
        lblPtntInfo.setText("BENEFICIARY INFORMATION");

        lblFrstNm.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblFrstNm.setForeground(new java.awt.Color(204, 130, 43));
        lblFrstNm.setText("First Name :");

        lblAddr.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblAddr.setForeground(new java.awt.Color(204, 130, 43));
        lblAddr.setText("Address:");

        lblLstNm.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblLstNm.setForeground(new java.awt.Color(204, 130, 43));
        lblLstNm.setText("Last Name :");

        lblSsn.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblSsn.setForeground(new java.awt.Color(204, 130, 43));
        lblSsn.setText("SSN :");

        txtPnNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPnNoActionPerformed(evt);
            }
        });

        lblPnNo.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblPnNo.setForeground(new java.awt.Color(204, 130, 43));
        lblPnNo.setText("Phone Number:");

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });

        lblAge.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblAge.setForeground(new java.awt.Color(204, 130, 43));
        lblAge.setText("Age :");

        lblSex.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblSex.setForeground(new java.awt.Color(204, 130, 43));
        lblSex.setText("Sex :");

        buttonGroup2.add(rbMale);
        rbMale.setFont(new java.awt.Font("YuGothic", 0, 14)); // NOI18N
        rbMale.setForeground(new java.awt.Color(204, 130, 43));
        rbMale.setText("M");
        rbMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMaleActionPerformed(evt);
            }
        });

        buttonGroup2.add(rbFemale);
        rbFemale.setFont(new java.awt.Font("YuGothic", 0, 14)); // NOI18N
        rbFemale.setForeground(new java.awt.Color(204, 130, 43));
        rbFemale.setText("F");
        rbFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFemaleActionPerformed(evt);
            }
        });

        lblInsInfo.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblInsInfo.setForeground(new java.awt.Color(204, 130, 43));
        lblInsInfo.setText("EBT INFORMATION");

        buttonGroup1.add(rbPtntInsYes);
        rbPtntInsYes.setFont(new java.awt.Font("YuGothic", 0, 12)); // NOI18N
        rbPtntInsYes.setForeground(new java.awt.Color(204, 130, 43));
        rbPtntInsYes.setText("Yes");
        rbPtntInsYes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPtntInsYesActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbPtntInsNo);
        rbPtntInsNo.setFont(new java.awt.Font("YuGothic", 0, 12)); // NOI18N
        rbPtntInsNo.setForeground(new java.awt.Color(204, 130, 43));
        rbPtntInsNo.setText("No");
        rbPtntInsNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbPtntInsNoActionPerformed(evt);
            }
        });

        lblIsThsPtntCvrdByIns.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblIsThsPtntCvrdByIns.setForeground(new java.awt.Color(204, 130, 43));
        lblIsThsPtntCvrdByIns.setText("Does customer have EBT");

        lblPlcyNm.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblPlcyNm.setForeground(new java.awt.Color(204, 130, 43));
        lblPlcyNm.setText("Card Type :");

        lblInsCmpny.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblInsCmpny.setForeground(new java.awt.Color(204, 130, 43));
        lblInsCmpny.setText("Card Issuer :");

        btnCrt.setBackground(new java.awt.Color(204, 130, 43));
        btnCrt.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        btnCrt.setForeground(new java.awt.Color(255, 255, 255));
        btnCrt.setText("Create");
        btnCrt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrtActionPerformed(evt);
            }
        });

        lblRsnFrVst.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblRsnFrVst.setForeground(new java.awt.Color(204, 130, 43));
        lblRsnFrVst.setText("Preffered Food");

        txtRsnFrVst.setFont(new java.awt.Font("YuGothic", 0, 13)); // NOI18N

        lblPtntMdclCndtn.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblPtntMdclCndtn.setForeground(new java.awt.Color(204, 130, 43));
        lblPtntMdclCndtn.setText("ORDER FOOD ");

        txtAddr.setColumns(20);
        txtAddr.setFont(new java.awt.Font("YuGothic", 0, 13)); // NOI18N
        txtAddr.setRows(5);
        jScrollPane1.setViewportView(txtAddr);

        lblPlcyNo.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblPlcyNo.setForeground(new java.awt.Color(204, 130, 43));
        lblPlcyNo.setText("Provide Card Number:");

        txtPlcyNo.setEnabled(false);

        btnFndPlcy.setBackground(new java.awt.Color(204, 130, 43));
        btnFndPlcy.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        btnFndPlcy.setForeground(new java.awt.Color(153, 153, 153));
        btnFndPlcy.setText("Find EBT");
        btnFndPlcy.setEnabled(false);
        btnFndPlcy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFndPlcyActionPerformed(evt);
            }
        });

        lblPtntInsCvrg.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblPtntInsCvrg.setForeground(new java.awt.Color(204, 130, 43));
        lblPtntInsCvrg.setText("Coverage % :");

        buttonGroup2.add(rbOthr);
        rbOthr.setFont(new java.awt.Font("YuGothic", 0, 14)); // NOI18N
        rbOthr.setForeground(new java.awt.Color(204, 130, 43));
        rbOthr.setText("Other");

        lblVstId.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblVstId.setForeground(new java.awt.Color(204, 130, 43));
        lblVstId.setText("Beneficiary ID:");

        btnRstPlcyNo.setBackground(new java.awt.Color(204, 130, 43));
        btnRstPlcyNo.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        btnRstPlcyNo.setForeground(new java.awt.Color(255, 255, 255));
        btnRstPlcyNo.setText("Reset EBT Number");
        btnRstPlcyNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRstPlcyNoActionPerformed(evt);
            }
        });

        txtEml.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        txtEml.setForeground(new java.awt.Color(204, 130, 43));
        txtEml.setText("Beneficiary Email:");

        lblDrTyp.setFont(new java.awt.Font("YuGothic", 1, 14)); // NOI18N
        lblDrTyp.setForeground(new java.awt.Color(204, 130, 43));
        lblDrTyp.setText("Volunteer Type");

        cbDrTyp.setFont(new java.awt.Font("YuGothic", 0, 13)); // NOI18N
        cbDrTyp.setForeground(new java.awt.Color(204, 130, 43));
        cbDrTyp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Delivery Volunteer", "Take Home Assistant" }));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Untitled-design.gif"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(508, 508, 508)
                .addComponent(lblInsInfo)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(215, 215, 215)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblAlreadyRegistered)
                                            .addComponent(lblVstId, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(10, 10, 10)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtProvideSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(txtVstId, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(btnFndPtnt))
                                            .addComponent(lblPtntInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(txtEml))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDt)
                                        .addGap(23, 23, 23)
                                        .addComponent(txtDt, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtPtntEml, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblFrstNm)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(202, 202, 202)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblLstNm)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(txtLstNm, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblSsn)
                                                .addGap(52, 52, 52)
                                                .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(30, 30, 30)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblSex)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(rbFemale)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rbMale)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(rbOthr))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblAge)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(25, 25, 25)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(txtFrstNm, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPnNo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblPnNo)
                                        .addGap(83, 83, 83))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(lblAddr)
                                        .addGap(18, 18, 18)))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(btnBack)
                        .addGap(406, 406, 406)
                        .addComponent(lblFndPtnt)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(txtInsCmpny, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblPlcyNo)
                                            .addGap(2, 2, 2)
                                            .addComponent(txtPlcyNo, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnFndPlcy)
                                    .addGap(42, 42, 42)
                                    .addComponent(btnRstPlcyNo))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblInsCmpny)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(lblPlcyNm)
                                                .addComponent(lblPtntInsCvrg))
                                            .addGap(18, 18, 18)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(txtPtntInsCvrg, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                                                .addComponent(txtPlcyNm))))
                                    .addGap(325, 325, 325)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnCrt, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(224, 224, 224))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblPtntMdclCndtn)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(lblRsnFrVst)
                                            .addComponent(lblDrTyp))
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cbDrTyp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtRsnFrVst, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(131, 131, 131)))
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblIsThsPtntCvrdByIns)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rbPtntInsYes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbPtntInsNo)
                        .addGap(339, 339, 339))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lblFndPtnt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAlreadyRegistered)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtProvideSsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFndPtnt)
                        .addComponent(txtDt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblDt)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblVstId)
                    .addComponent(txtVstId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEml)
                    .addComponent(txtPtntEml, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblAge)
                                    .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblSex)
                                .addComponent(rbMale)
                                .addComponent(rbFemale)
                                .addComponent(rbOthr))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(lblPtntInfo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblFrstNm)
                                    .addComponent(txtFrstNm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPnNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblPnNo)
                                    .addComponent(lblSsn)
                                    .addComponent(txtSsn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblLstNm)
                                .addComponent(txtLstNm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(lblAddr)))
                .addGap(18, 18, 18)
                .addComponent(lblInsInfo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIsThsPtntCvrdByIns)
                    .addComponent(rbPtntInsYes)
                    .addComponent(rbPtntInsNo))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPlcyNo)
                            .addComponent(txtPlcyNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFndPlcy)
                            .addComponent(btnRstPlcyNo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblInsCmpny)
                            .addComponent(txtInsCmpny, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPtntInsCvrg)
                            .addComponent(txtPtntInsCvrg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPlcyNm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPlcyNm))
                        .addGap(19, 19, 19)
                        .addComponent(lblPtntMdclCndtn)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDrTyp)
                            .addComponent(cbDrTyp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblRsnFrVst)
                            .addComponent(txtRsnFrVst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCrt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(348, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtPnNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPnNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPnNoActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed

    private void rbMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbMaleActionPerformed

    private void rbFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFemaleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbFemaleActionPerformed

    private void rbPtntInsYesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPtntInsYesActionPerformed
        lblPlcyNo.setEnabled(true);
        btnFndPlcy.setEnabled(true);
        txtPlcyNo.setEnabled(true);

    }//GEN-LAST:event_rbPtntInsYesActionPerformed

    private void rbPtntInsNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbPtntInsNoActionPerformed
        
        lblPlcyNo.setEnabled(false);
        btnFndPlcy.setEnabled(false);
        txtPlcyNo.setEnabled(false);
        txtInsCmpny.setEnabled(false);
        txtPlcyNm.setEnabled(false);
        
        txtPtntInsCvrg.setEnabled(false);
        
        lblPtntInsCvrg.setEnabled(false);
        lblInsCmpny.setEnabled(false);
        
        lblPlcyNm.setEnabled(false);
    }//GEN-LAST:event_rbPtntInsNoActionPerformed

    private void btnCrtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrtActionPerformed
        
        if (txtFrstNm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide first name");
            return;
        }
        if (txtLstNm.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide last name");
            return;
        }
        if (buttonGroup2.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please select gender");
            return;
        }
        if (txtPnNo.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide phone");
            return;
        }
        if (txtSsn.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide SSN");
            return;
        }
        if (txtAge.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide age");
            return;
        }
        if (txtAddr.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide address");
            return;
        }
        
        if (buttonGroup1.isSelected(null)) {
            JOptionPane.showMessageDialog(null, "Please choose if beneficiary had an EBT card");
            return;
        }
        
        if (txtRsnFrVst.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide preferred food");
            return;
            
        }
        if (txtPtntEml.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please provide an Email ID");
            return;
            
        }
        if (!usernamePatternCorrect(txtPtntEml.getText().trim())) {
            JOptionPane.showMessageDialog(null, "Please provide a valid email ID in the format xxxx@xx.xx");
            
        }
        else {
            
            String registrationDate = txtDt.getText().trim();
            
            String firstName = txtFrstNm.getText().trim();
            String lastName = txtLstNm.getText().trim();
            String gender = "Male";
            if (rbFemale.isSelected()) {
                gender = "Female";
            } else if (rbOthr.isSelected()) {
                gender = "Other";
            }
            
            String phoneNo = txtPnNo.getText().trim();
            
            if (!phonePatternCorrect()) {
                JOptionPane.showMessageDialog(null, "/* Following are valid phone number examples */             \n"
                        + "              \"1234567890\", \"123-456-7890\", \"(123)4567890\", \"(123)456-7890\",\n"
                        + "              /* Following are invalid phone numbers */ \n"
                        + "              \"(1234567890)\",\"123)4567890\", \"12345678901\", \"(1)234567890\",");
                txtPnNo.setBorder(BorderFactory.createLineBorder(Color.RED));
                
                return;
            }
            
            if (phonePatternCorrect()) {
                txtPnNo.setBorder(BorderFactory.createLineBorder(Color.GRAY));
                
            }
            
            String ssn = txtSsn.getText().trim();
            
            if (!ssnPatternCheck()) {
                JOptionPane.showMessageDialog(null, "/* United States Social Security numbers are nine-digit numbers in the format AAA-GG-SSSS with following rules. */             \n"
                        + "              \"The first three digits called the area number. The area number cannot be 000, 666, or between 900 and 999\",\n"
                        + "                \" Digits four and five are called the group number and range from 01 to 99\",\n"
                        + "              \"The last four digits are serial numbers from 0001 to 9999.\"");
                txtSsn.setBorder(BorderFactory.createLineBorder(Color.RED));
                
                return;
            }
            
            if (ssnPatternCheck()) {
                txtSsn.setBorder(BorderFactory.createLineBorder(Color.GRAY));
                
            }
            
            String age = txtAge.getText().trim();
            
            try {
                Integer.parseInt(age);
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Please provide integer values in Age textfield");
                return;
            }
            
            String address = txtAddr.getText().trim();
            boolean hasInsurance = false;
            
            String policyNumber = txtPlcyNo.getText().trim();
            if (rbPtntInsYes.isSelected()) {
                if (policyNumber.equals("")) {
                    JOptionPane.showMessageDialog(null, "Provide ebt card number");
                    return;
                }
                
                if (txtPlcyNm.getText().equals("")) {
                    JOptionPane.showMessageDialog(null, "No card found, please provide correct card number");
                    return;
                }
            }
            String insuranceCompany = String.valueOf(txtInsCmpny.getText());
            String policyName = String.valueOf(txtPlcyNm.getText());
            String coverString = txtPtntInsCvrg.getText().trim();
            double coverage = coverString.equals("") ? 0 : Double.parseDouble(txtPtntInsCvrg.getText().trim());
            
            String reasonForVisit = txtRsnFrVst.getText().trim();
            
            if (hasInsurance) {
                if (txtPlcyNo.getText().equals("")) {
                    return;
                }
            }
            
            EBTCard insurance = new EBTCard(policyName, insuranceCompany, coverage);
            EBTMembers insuranceCustomer = new EBTMembers(insurance, policyNumber);
            
            FoodBankEnterprise healthCenterEnterprise = (FoodBankEnterprise) enterprise;
            Beneficiary patient = new Beneficiary();
            
            patient.setOrderDate(txtDt.getText());
            patient.setBenId(patientId);
            patient.setBenFirstName(firstName);
            patient.setBenLastName(lastName);
            patient.setGender(gender);
            patient.setBenMail(txtPtntEml.getText().trim());
            
            patient.setContactNo(phoneNo);
            patient.setBenAge(age);
            patient.setSsn(ssn);
            patient.setAddress(address);
            patient.setVolType(cbDrTyp.getSelectedItem().toString());
            
            patient.setEBTMembers(insuranceCustomer);
            
            healthCenterEnterprise.getBenificiaryDirectory().getBeneficiaries().add(patient);
            
            OrderPlaceRequest patientTreatmentWorkRequest = new OrderPlaceRequest(registrationDate, reasonForVisit, patient);
            patientTreatmentWorkRequest.setProcessStatus("Waiting for volunteer");
            //   patientTreatmentWorkRequest.setSender(userAccount);

            Organization org = null;
            for (Organization organization : enterprise.getOrgDir().getOrganizations()) {
                if (organization instanceof OrgVolunteer) {
                    org = organization;
                    break;
                }
            }
            if (org != null) {
                org.getProcessQueue().getProcesReq().add(patientTreatmentWorkRequest);
                userAccount.getProcessQueue().getProcesReq().add(patientTreatmentWorkRequest);
                refresh();
                JOptionPane.showMessageDialog(null, "Order Placed Successfully");
            }
            
        }
    }//GEN-LAST:event_btnCrtActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        AccountantWorkAreaJPanel dwjp = (AccountantWorkAreaJPanel) component;
        dwjp.pplAllPtntsTbl();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnFndPtntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFndPtntActionPerformed
        
        boolean isPatientFound = false;
        String ssn = txtProvideSsn.getText().trim();
        List<Networks> networks = ecosystem.getNetworks();
        List<FoodBankEnterprise> healthCenterEnterprises = new ArrayList<>();
        
        for (Networks network : networks) {
            for (Enterprise enterprise : network.getEntDir().getEnterpriseList()) {
                if (enterprise instanceof FoodBankEnterprise) {
                    healthCenterEnterprises.add((FoodBankEnterprise) enterprise);
                }
            }
        }
        
        for (FoodBankEnterprise healthCenterEnterprise : healthCenterEnterprises) {
            List<Beneficiary> patients = healthCenterEnterprise.getBenificiaryDirectory().getBeneficiaries();
            for (Beneficiary patient : patients) {
                if (ssn.equals(patient.getSsn())) {
                    autopopulateFields(patient);
                    isPatientFound = true;
                }
                
            }
        }
        
        if (!isPatientFound) {
            JOptionPane.showMessageDialog(null, "No User Found");
        }
    }//GEN-LAST:event_btnFndPtntActionPerformed

    private void btnFndPlcyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFndPlcyActionPerformed
        String insurancePolicyNumber = txtPlcyNo.getText().trim();
        String ssn = txtSsn.getText().trim();
        List<EBTEnterprise> insuranceEnterprises = new ArrayList<>();
        EBTMembers matchedCustomer = null;
        
        List<Networks> networks = ecosystem.getNetworks();
        for (Networks network : networks) {
            for (Enterprise enterprise : network.getEntDir().getEnterpriseList()) {
                if (enterprise instanceof EBTEnterprise) {
                    insuranceEnterprises.add((EBTEnterprise) enterprise);
                }
            }
        }
        
        for (EBTEnterprise insuranceCompanyEnterprise : insuranceEnterprises) {
            List<EBTMembers> insuranceCustomers = insuranceCompanyEnterprise.getEbtMembersDirectory().getEbtMem();
            for (EBTMembers insuranceCustomer : insuranceCustomers) {
                if (insurancePolicyNumber.equals(insuranceCustomer.getEbtCardNo()) && ssn.equals(insuranceCustomer.getSsn())) {
                    matchedCustomer = insuranceCustomer;
                    
                }
            }
        }
        
        if (matchedCustomer != null) {
            txtInsCmpny.setText(matchedCustomer.getEbt().getEBTAgent());
            txtPlcyNm.setText(matchedCustomer.getEbt().getEbtType());
            //  txtPolicyNo.setText(matchedCustomer.getInsurancePolicyNumber());
            txtPtntInsCvrg.setText(String.valueOf(matchedCustomer.getEbt().getAllowance()));
            txtPlcyNo.setEnabled(false);
            txtSsn.setEnabled(false);
        } else {
            JOptionPane.showMessageDialog(null, "EBT card number does not match with provided SSN");
            txtInsCmpny.setText("");
            txtPlcyNm.setText("");
            txtPtntInsCvrg.setText("");
            txtPlcyNo.setText("");
            return;
        }
    }//GEN-LAST:event_btnFndPlcyActionPerformed

    private void btnRstPlcyNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRstPlcyNoActionPerformed
        txtPlcyNo.setEnabled(true);
        txtSsn.setEnabled(true);
        txtPlcyNo.setText("");
        txtPlcyNm.setText("");
        txtInsCmpny.setText("");
        txtPtntInsCvrg.setText("");
        

    }//GEN-LAST:event_btnRstPlcyNoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCrt;
    private javax.swing.JButton btnFndPlcy;
    private javax.swing.JButton btnFndPtnt;
    private javax.swing.JButton btnRstPlcyNo;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JComboBox cbDrTyp;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblAddr;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAlreadyRegistered;
    private javax.swing.JLabel lblDrTyp;
    private javax.swing.JLabel lblDt;
    private javax.swing.JLabel lblFndPtnt;
    private javax.swing.JLabel lblFrstNm;
    private javax.swing.JLabel lblInsCmpny;
    private javax.swing.JLabel lblInsInfo;
    private javax.swing.JLabel lblIsThsPtntCvrdByIns;
    private javax.swing.JLabel lblLstNm;
    private javax.swing.JLabel lblPlcyNm;
    private javax.swing.JLabel lblPlcyNo;
    private javax.swing.JLabel lblPnNo;
    private javax.swing.JLabel lblPtntInfo;
    private javax.swing.JLabel lblPtntInsCvrg;
    private javax.swing.JLabel lblPtntMdclCndtn;
    private javax.swing.JLabel lblRsnFrVst;
    private javax.swing.JLabel lblSex;
    private javax.swing.JLabel lblSsn;
    private javax.swing.JLabel lblVstId;
    private javax.swing.JRadioButton rbFemale;
    private javax.swing.JRadioButton rbMale;
    private javax.swing.JRadioButton rbOthr;
    private javax.swing.JRadioButton rbPtntInsNo;
    private javax.swing.JRadioButton rbPtntInsYes;
    private javax.swing.JTextArea txtAddr;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtDt;
    private javax.swing.JLabel txtEml;
    private javax.swing.JTextField txtFrstNm;
    private javax.swing.JTextField txtInsCmpny;
    private javax.swing.JTextField txtLstNm;
    private javax.swing.JTextField txtPatientId11;
    private javax.swing.JTextField txtPlcyNm;
    private javax.swing.JTextField txtPlcyNo;
    private javax.swing.JTextField txtPnNo;
    private javax.swing.JTextField txtProvideSsn;
    private javax.swing.JTextField txtPtntEml;
    private javax.swing.JTextField txtPtntInsCvrg;
    private javax.swing.JTextField txtRsnFrVst;
    private javax.swing.JTextField txtSsn;
    private javax.swing.JTextField txtVstId;
    // End of variables declaration//GEN-END:variables

    private void populateField() {
        LocalDateTime localTimeUpdate = LocalDateTime.now();
        DateTimeFormatter dateTimeFormat = DateTimeFormatter.ofPattern("MM/dd/yyyy hh:mm:ss");
        txtDt.setText(localTimeUpdate.format(dateTimeFormat));
        
        txtVstId.setText(patientId);
        
        lblPlcyNo.setEnabled(false);
        btnFndPlcy.setEnabled(false);
        txtPlcyNo.setEnabled(false);
        txtInsCmpny.setEnabled(false);
        txtPlcyNm.setEnabled(false);
        
        txtPtntInsCvrg.setEnabled(false);
        
        lblPtntInsCvrg.setEnabled(false);
        lblInsCmpny.setEnabled(false);
        
        lblPlcyNm.setEnabled(false);
    }
    
    private void refresh() {
        
        txtVstId.setText(UUID.randomUUID().toString().substring(0, 7));
        txtFrstNm.setText("");
        txtLstNm.setText("");
        txtPnNo.setText("");
        txtAge.setText("");
        txtSsn.setText("");
        txtAddr.setText("");
        txtRsnFrVst.setText("");
        txtPtntEml.setText("");
        txtPlcyNm.setText("");
        txtPlcyNo.setText("");
        txtPtntInsCvrg.setText("");
        txtInsCmpny.setText("");
    }
    
    private boolean phonePatternCorrect() {
        
        Pattern pattern = Pattern.compile("\\d{10}|(?:\\d{3}-){2}\\d{4}|\\(\\d{3}\\)\\d{3}-?\\d{4}");
        Matcher matcher = pattern.matcher(txtPnNo.getText());
        
        boolean b = false;
        
        if (matcher.matches()) {
            b = true;
        } else {
            b = false;
        }
        
        return b;
    }
    
    private boolean ssnPatternCheck() {
        
        Pattern pattern = Pattern.compile("^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$");
        Matcher matcher = pattern.matcher(txtSsn.getText());
        
        boolean b = false;
        
        if (matcher.matches()) {
            b = true;
        } else {
            b = false;
        }
        
        return b;
    }
    
    private void autopopulateFields(Beneficiary patient) {
        txtFrstNm.setText(patient.getBenFirstName());
        txtLstNm.setText(patient.getBenLastName());
        txtVstId.setText(patient.getBenId());
        txtPnNo.setText(patient.getContactNo());
        txtSsn.setText(patient.getSsn());
        txtAge.setText(patient.getBenAge());
        txtAddr.setText(patient.getAddress());
        txtPtntEml.setText(patient.getBenMail());
        
        String sex = patient.getGender();
        
        if (sex.equals("Male")) {
            rbMale.setSelected(true);
        } else if (sex.equals("Female")) {
            rbFemale.setSelected(true);
        } else if (sex.equals("Other")) {
            rbOthr.setSelected(true);
        }
        
    }
    
    private boolean usernamePatternCorrect(String username) {
        Pattern p = Pattern.compile("^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$");
        Matcher m = p.matcher(username);
        boolean b = m.matches();
        return b;
        
    }
    
    private boolean checkEmailDuplication(String patientEmail){
             boolean isPatientFound = false;
        String ssn = txtProvideSsn.getText().trim();
        List<Networks> networks = ecosystem.getNetworks();
        List<FoodBankEnterprise> healthCenterEnterprises = new ArrayList<>();
        
        for (Networks network : networks) {
            for (Enterprise enterprise : network.getEntDir().getEnterpriseList()) {
                if (enterprise instanceof FoodBankEnterprise) {
                    healthCenterEnterprises.add((FoodBankEnterprise) enterprise);
                }
            }
        }
        
        for (FoodBankEnterprise healthCenterEnterprise : healthCenterEnterprises) {
            List<Beneficiary> patients = healthCenterEnterprise.getBenificiaryDirectory().getBeneficiaries();
            for (Beneficiary patient : patients) {
                if (patientEmail.equals(patient.getBenMail())) {
                    isPatientFound = true;
                    break;
                }
                
            }
        }
        return isPatientFound;
    }
}
